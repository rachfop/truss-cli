"use strict";(self.webpackChunkmy_truss_docs=self.webpackChunkmy_truss_docs||[]).push([[254],{7620:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>q,contentTitle:()=>D,default:()=>A,frontMatter:()=>C,metadata:()=>s,toc:()=>N});const s=JSON.parse('{"id":"main","title":"Use Custom Docker Images in Truss","description":"By default, Truss uses pre-built base images from baseten/truss-server-base that are optimized for ML workloads.","source":"@site/docs/main.mdx","sourceDirName":".","slug":"/main","permalink":"/main","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Use Custom Docker Images in Truss"},"sidebar":"mainSidebar","previous":{"title":"Use Custom Docker Images in Truss","permalink":"/"}}');var a=r(4848),t=r(8453),i=r(6540),o=r(8215),l=r(7559),u=r(3104),c=r(6347),d=r(205),h=r(7485),m=r(1682),p=r(679);function g(e){var n,r;return null!=(n=null==(r=i.Children.toArray(e).filter(function(e){return"\n"!==e}).map(function(e){if(!e||(0,i.isValidElement)(e)&&((n=e.props)&&"object"==typeof n&&"value"in n))return e;var n;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')}))?void 0:r.filter(Boolean))?n:[]}function b(e){var n=e.values,r=e.children;return(0,i.useMemo)(function(){var e=null!=n?n:function(e){return g(e).map(function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes,default:n.default}})}(r);return function(e){var n=(0,m.XI)(e,function(e,n){return e.value===n.value});if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map(function(e){return e.value}).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e},[n,r])}function f(e){var n=e.value;return e.tabValues.some(function(e){return e.value===n})}function x(e){var n=e.queryString,r=void 0!==n&&n,s=e.groupId,a=(0,c.W6)(),t=function(e){var n=e.queryString,r=void 0!==n&&n,s=e.groupId;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!s)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=s?s:null}({queryString:r,groupId:s});return[(0,h.aZ)(t),(0,i.useCallback)(function(e){if(t){var n=new URLSearchParams(a.location.search);n.set(t,e),a.replace(Object.assign({},a.location,{search:n.toString()}))}},[t,a])]}function v(e){var n,r,s,a,t=e.defaultValue,o=e.queryString,l=void 0!==o&&o,u=e.groupId,c=b(e),h=(0,i.useState)(function(){return function(e){var n,r=e.defaultValue,s=e.tabValues;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!f({value:r,tabValues:s}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+r+'" but none of its children has the corresponding value. Available values are: '+s.map(function(e){return e.value}).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return r}var a=null!=(n=s.find(function(e){return e.default}))?n:s[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:c})}),m=h[0],g=h[1],v=x({queryString:l,groupId:u}),j=v[0],y=v[1],k=(n=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),r=(0,p.Dv)(n),s=r[0],a=r[1],[s,(0,i.useCallback)(function(e){n&&a.set(e)},[n,a])]),_=k[0],w=k[1],I=function(){var e=null!=j?j:_;return f({value:e,tabValues:c})?e:null}();return(0,d.A)(function(){I&&g(I)},[I]),{selectedValue:m,selectValue:(0,i.useCallback)(function(e){if(!f({value:e,tabValues:c}))throw new Error("Can't select invalid tab value="+e);g(e),y(e),w(e)},[y,w,c]),tabValues:c}}var j=r(2303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function k(e){var n=e.className,r=e.block,s=e.selectedValue,t=e.selectValue,i=e.tabValues,l=[],c=(0,u.a_)().blockElementScrollPositionUntilNextRender,d=function(e){var n=e.currentTarget,r=l.indexOf(n),a=i[r].value;a!==s&&(c(n),t(a))},h=function(e){var n,r=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":var s,a=l.indexOf(e.currentTarget)+1;r=null!=(s=l[a])?s:l[0];break;case"ArrowLeft":var t,i=l.indexOf(e.currentTarget)-1;r=null!=(t=l[i])?t:l[l.length-1]}null==(n=r)||n.focus()};return(0,a.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":r},n),children:i.map(function(e){var n=e.value,r=e.label,t=e.attributes;return(0,a.jsx)("li",Object.assign({role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:function(e){l.push(e)},onKeyDown:h,onClick:d},t,{className:(0,o.A)("tabs__item",y.tabItem,null==t?void 0:t.className,{"tabs__item--active":s===n}),children:null!=r?r:n}),n)})})}function _(e){var n=e.lazy,r=e.children,s=e.selectedValue,t=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){var l=t.find(function(e){return e.props.value===s});return l?(0,i.cloneElement)(l,{className:(0,o.A)("margin-top--md",l.props.className)}):null}return(0,a.jsx)("div",{className:"margin-top--md",children:t.map(function(e,n){return(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==s})})})}function w(e){var n=v(e);return(0,a.jsxs)("div",{className:(0,o.A)(l.G.tabs.container,"tabs-container",y.tabList),children:[(0,a.jsx)(k,Object.assign({},n,e)),(0,a.jsx)(_,Object.assign({},n,e))]})}function I(e){var n=(0,j.A)();return(0,a.jsx)(w,Object.assign({},e,{children:g(e.children)}),String(n))}const T={tabItem:"tabItem_Ymn6"};function S(e){var n=e.children,r=e.hidden,s=e.className;return(0,a.jsx)("div",{role:"tabpanel",className:(0,o.A)(T.tabItem,s),hidden:r,children:n})}const C={title:"Use Custom Docker Images in Truss"},D=void 0,q={},N=[{value:"Requirements",id:"requirements",level:2},{value:"Customize Your Docker Image",id:"customize-your-docker-image",level:2},{value:"\ud83e\udde9 Standard Truss",id:"-standard-truss",level:3},{value:"Step 1: Choose Your Base Image",id:"step-1-choose-your-base-image",level:4},{value:"Step 2: Update <code>config.yaml</code>",id:"step-2-update-configyaml",level:4},{value:"Example: GPU-Enabled Config",id:"example-gpu-enabled-config",level:4},{value:"Step 3: Build and Run the Model",id:"step-3-build-and-run-the-model",level:4},{value:"\ud83e\udde9 Truss Chains",id:"-truss-chains",level:3},{value:"Step 1: Define Your Custom Image",id:"step-1-define-your-custom-image",level:4},{value:"Step 2: Apply It to Your Chainlet",id:"step-2-apply-it-to-your-chainlet",level:4}];function E(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["By default, Truss uses pre-built base images from ",(0,a.jsx)(n.a,{href:"https://hub.docker.com/r/baseten/truss-server-base",children:(0,a.jsx)(n.code,{children:"baseten/truss-server-base"})})," that are optimized for ML workloads.",(0,a.jsx)(n.br,{}),"\n","These images come in different variants for Python versions (3.9, 3.10, 3.11) and include GPU support when needed."]}),"\n",(0,a.jsxs)(n.p,{children:["The default images are Debian-based and include common dependencies like build tools, Git, and cURL. For most workloads, this is sufficient \u2014 however, there are times when you need to use a ",(0,a.jsx)(n.strong,{children:"custom Docker image"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"You should consider using a custom Docker image when:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"You need specific system dependencies"})," not included in the default images"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"You want to use a different base OS"})," or distribution"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"You have pre-configured environments"})," from other projects"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"You need to optimize image size"})," for specific use cases"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"You require specific versions"})," of system libraries or tools"]}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,a.jsx)(n.p,{children:"Your Docker image must meet these requirements:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Debian-based OS"})," \u2014 the image must be Debian or Debian-like (validated at build time)."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Python 3.8\u20133.13"})," \u2014 must have a compatible Python version installed."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Absolute Python path"})," \u2014 if the Python executable isn't at the default location, you must specify its absolute path."]}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"customize-your-docker-image",children:"Customize Your Docker Image"}),"\n",(0,a.jsx)(n.p,{children:"Truss allows you to specify your Docker image in two ways."}),"\n","\n",(0,a.jsxs)(I,{groupId:"truss-type",defaultValue:"standard",values:[{label:"Standard Truss",value:"standard"},{label:"Truss Chains",value:"chains"}],children:[(0,a.jsxs)(S,{value:"standard",children:[(0,a.jsx)(n.h3,{id:"-standard-truss",children:"\ud83e\udde9 Standard Truss"}),(0,a.jsx)(n.h4,{id:"step-1-choose-your-base-image",children:"Step 1: Choose Your Base Image"}),(0,a.jsxs)(n.p,{children:["Select a Docker image from ",(0,a.jsx)(n.a,{href:"https://hub.docker.com/",children:"Docker Hub"})," or your private registry."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"python:3.11-bookworm\n"})}),(0,a.jsx)(n.p,{children:"or a custom image such as:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nvcr.io/nvidia/nemo:23.03\n"})}),(0,a.jsx)(n.hr,{}),(0,a.jsxs)(n.h4,{id:"step-2-update-configyaml",children:["Step 2: Update ",(0,a.jsx)(n.code,{children:"config.yaml"})]}),(0,a.jsxs)(n.p,{children:["Add the ",(0,a.jsx)(n.code,{children:"base_image"})," configuration to your Truss config:"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'base_image:\n  image: "python:3.11-bookworm"\n  python_executable_path: "/usr/local/bin/python3"\n'})}),(0,a.jsx)(n.p,{children:"For private registries, include authentication credentials:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'base_image:\n  image: "your-registry.com/your-image:tag"\n  python_executable_path: "/usr/local/bin/python3"\n  docker_auth:\n    username: "your-username"\n    password: "your-password"\n'})}),(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["\ud83d\udca1 ",(0,a.jsx)(n.strong,{children:"Example:"}),"\nSee ",(0,a.jsx)(n.code,{children:"src/standard-truss/config.yaml"})," for a minimal but valid Truss configuration that includes the ",(0,a.jsx)(n.code,{children:"base_image"})," block."]}),"\n"]}),(0,a.jsx)(n.hr,{}),(0,a.jsx)(n.h4,{id:"example-gpu-enabled-config",children:"Example: GPU-Enabled Config"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'config_version: 2\nmodel_name: custom-base-image-example\npython_config:\n  python_version: py38\n  requirements:\n    - PySoundFile\nresources:\n  accelerator: T4\n  cpu: "2500m"\n  memory: "4512Mi"\n  use_gpu: true\nbase_image:\n  image: nvcr.io/nvidia/nemo:23.03\n  python_executable_path: /usr/bin/python\napply_library_patches: true\nsystem_packages:\n  - python3.8-venv\n'})}),(0,a.jsx)(n.hr,{}),(0,a.jsx)(n.h4,{id:"step-3-build-and-run-the-model",children:"Step 3: Build and Run the Model"}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Build the Docker image:"})}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"truss image build path/to/your/truss --tag custom-base-image-example:latest\n"})}),(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["\u26a0\ufe0f ",(0,a.jsx)(n.strong,{children:"Platform Note:"}),"\nIf you're building on an Apple Silicon (M1/M2) Mac or targeting GPUs, you may need to specify the correct platform:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"truss image build path/to/your/truss --tag custom-base-image-example:latest --platform linux/amd64\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Otherwise, Docker may attempt to build for ",(0,a.jsx)(n.code,{children:"arm64"}),", which can cause runtime incompatibilities."]}),"\n"]}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Run the Truss container locally:"})}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"truss image run path/to/your/truss --tag custom-base-image-example:latest --port 8080\n"})}),(0,a.jsx)(n.p,{children:"After it starts, your model will be available at:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"http://localhost:8080/v1/models/custom-base-image-example/predict\n"})}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Equivalent using Python:"})}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from truss import TrussHandle\n\nth = TrussHandle("path/to/your/truss")\nth.set_base_image("python:3.11-bookworm", "/usr/local/bin/python3")\nth.docker_run(local_port=8080)\n'})})]}),(0,a.jsxs)(S,{value:"chains",children:[(0,a.jsx)(n.h3,{id:"-truss-chains",children:"\ud83e\udde9 Truss Chains"}),(0,a.jsx)(n.h4,{id:"step-1-define-your-custom-image",children:"Step 1: Define Your Custom Image"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'import truss_chains as chains\n\nIMAGE_CUSTOM = chains.DockerImage(\n    base_image=chains.CustomImage(\n        image="python:3.11-slim-bookworm",\n        python_executable_path="/usr/local/bin/python"  # optional\n    ),\n    pip_requirements_file=chains.make_abs_path_here("requirements.txt"),\n)\n'})}),(0,a.jsx)(n.h4,{id:"step-2-apply-it-to-your-chainlet",children:"Step 2: Apply It to Your Chainlet"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"class MyChainlet(chains.ChainletBase):\n    remote_config = chains.RemoteConfig(\n        docker_image=IMAGE_CUSTOM\n    )\n    \n    def run_remote(self, data: str) -> str:\n        return data.upper()\n"})}),(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["\ud83d\udd0d See ",(0,a.jsx)(n.code,{children:"src/truss-chains/"})," for working examples of custom image configurations."]}),"\n"]})]})]})]})}function A(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(E,{...e})}):E(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var s=r(6540);const a={},t=s.createContext(a);function i(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);